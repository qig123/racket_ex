#lang racket
(define  (f x y)
  ((lambda (a b)
    (+ (* x (* a a))
       (* y b)
       (* a b)
       )
    ) (+ 1 (* x y)) (- 1 y))
  )
(define (factorial n)
  (cond ((= n  1) 1)
        (else ( * n (factorial (- n 1)) )) 
        )
  )
(define (factorial2 n)
  (factorial2)
  )